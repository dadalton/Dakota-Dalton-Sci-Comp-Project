%Dakota Dalton - 1366027
%Scientific Computing - MECE 5397
%Implementation of Helmholtz Equation in 2D - Semester Project
%Project code AHc2-1

%% given values and boundary conditions
ax = -pi; ay = ax; %given domain limits, these form a rectangle
bx = pi; by = bx;

delta = 0.1; %step size, same for both x and y

x = ax:delta:bx;  %discretizing the domain
y = ay:delta:ax;

gb = (bx-x).^2 .* cos((pi*x)/bx); %boundary conditions for y
fb = x .* (bx - x).^2;

F = sin(pi * (x - ax)/(bx - ax)) ... %applied force
    * cos((pi/2)*(2*(y - ay)/(by - ay) + 1));

%% gauss-seidel method

u = zeros(length(x)); %initial values of u to be iterated over
u(1,:) = gb;
u(end,:) = fb;
u(:,1) = gb(1) + (y-ay)/(by-ay) * (fb(1)-gb(1));


for i = 2:length(x)-1
    for j = 2:length(y)-1
        uprev = u(j,i);
        u(j,i) = (u(j+1,i) + u(j-1,i) + u(j,i+1) + u(j,i-1) ...
            - delta^2 * F(j,i));% * (1/(4 - delta^2 * lambda));
        epsilon = abs((u(j,i)-uprev)/u(j,i));
        if epsilon < 0.01   %terminates iteration for less than 1% change
            break
        end
    end
    u(
end

for j = 

%u = u * 1/(4 - delta^2 * lambda); %applying constant denominator coefficient






